stages:
  - cleanup
  - build
  - prepare_artifact
  - test
  - debug

cleanup_build:
  stage: cleanup
  script:
    - docker rm -f sae || true
    - docker rmi -f api:$CI_COMMIT_REF_NAME || true

build_image:
  stage: build
  image: docker:latest
  services:
    - name: docker:dind
    - name: alpine/git
  script:
    - apk --update add git
    - docker build -t api:$CI_COMMIT_REF_NAME .
    - docker tag api:$CI_COMMIT_REF_NAME api:latest  # Tag supplémentaire pour "latest"
  only:
    - master  # Cela dépend de votre stratégie de déploiement

prepare_artifact:
  stage: prepare_artifact
  script:
    - tar -cvf /builds/m20003727/sae_s5/api.tar .
  artifacts:
    paths:
      - api.tar

test_image:
  stage: test
  image: docker:latest
  services:
    - docker:dind
  script:
    - CONTAINER_NAME="sae-$CI_JOB_ID"
    - docker run -d -p 3000:3000 --name $CONTAINER_NAME api:$CI_COMMIT_REF_NAME npm start
    - sleep 20
    - docker exec $CONTAINER_NAME npm test
  after_script:
    - docker stop $CONTAINER_NAME
  artifacts:
    paths:
      - api.tar

debug:
  stage: debug
  script:
    - ls -la
